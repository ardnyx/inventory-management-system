<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE0AAABKCAYAAAD+DNkIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAYISURBVHhe7ZshiB1HHMaPEhHRQiGlDTSQQgoJNNCKgwYS
        uEICLSSi0EArCglUlBIREXEi4omIiIiIiBMVESdORFScOBHxxImIExEnIp44ERFx4sSJEydev2/m27nd
        efsuu7P73sx7b3+wvDf/mfnvzLczs7Ozs0sdHR0LxcrKyqfD4fAtjlCO+v1+T+4Wg16vd0OVb0Jf7hYD
        iPaTKt6ETrQAaomGc57DcRHHVzLNFtMQDef4HuPeU6R7g+PQ5DjhCMcu4l8g3U1lSZuWRNuSuwIUAXF9
        m6QyAwh4Ty7SpAXRDuFjWe4MuCN/DvuGjQ7mDfxclMu0aCoaWsVduTKgopdhfmdjG3MA/9flOh2aiIYK
        rcmNAYJ9C/MHG9sanAemJVwD0fbZDeUmmyTnW9gefN9n18VxB+FNa/4oAxzH9q/jkBdEp4pPqGi4+g/l
        wgDTSxtjGOQFzWDLVHwpWctFma4heGCtjh34PGMcxSZQtAO2LLmgj+uyGxA24xzSXEJwDeGfFeYNwp9y
        ZGzlRUF43ZpPgKh/KzougaL9q+wGhF9bswU+v5H9P2sZHkGQs7JtW1OBd95F+BE2zt98PmR+ohIiGvMo
        O/Nz8C+QE83N0cpsgkKYOML/tNmoUeDnNyWNBwVQeariWg1Bl1mV3ZETyLVA2L6QLS/aEezXaCdsbbDt
        2qixbCh5PAJE21FWA8Jb1nwCfN5gHATlXZN3w+cmMcB/14oQ/4fMFOwMTCO+SthXlngEiFa40giXdaXS
        xyoO5IqnYIU1OIRPvbPmQZk/U7Y41BUNlXOthshcxgZ8f8007HbI9xC2bP61bjILxD2QvRLw68bAKNQV
        DeldC8Hf8zKfBltifrK6za4oFxTsNmz+ZPZUcN5Lyh6HuqKhkk+U1SBzVTjpPa+sPPd3sGXztj34fgTb
        L/xFmGNhKTMnGniprAaEx01WffgodEXZ2GXZSt/bqOFbhAtPEAjzTsr1txFQ5i+VLA4Bor1WVgPCVV7K
        HKP13FKWEUFQBhMHO1dzyWWG8XtVSfIcI90njI8GClZXtMItH2I8l30sSPOXkhtgemVjLDLTngk5kIk2
        /+68rah4BIjGluG6Gf7fkrkUCPZMSQ0IP1GUQ1EUaM9aym0E+VcVFY8Q0fIFR1fhpDQbm3w2Ga+kFOye
        7AUUnRfoUCZftGOU94Ki4hEiGthVdgPE4BzMh+tt7iEcabgSUjq1QDrziMWLgSDTmNYJ+1n8zz+4F25C
        0QgUjV3UvTlSa/OXuLl8ZKYX+OUS+L41jwKxnhpHHrBz6pHBu2/8VkZCRQOFARl+lmHzW9IAdraesXMu
        wbvrKsWnL/4izEcu5w/h++ZEKdBANFbkd7kxsGKKCoWrtTv6dcBv4dEtOk1EA+yChS6DCpaNb8HA31rW
        ApOhoWiE7yfdgE9QUS4J+Wv8dWGXLbyHSIYWRCMv5M4BIfmYFPrCuI9yXZWr9GhJtLF7OeD/CsckpBm7
        hC34DLuO9GYBM2kmLVoeCojjLo5VHOQxjj9xLCc3bp0GCjw10eaGTrQAOtFqwnEEg/RjVbwJ3G5l1sBm
        FgjxjyqTIu85HVFR06Gl1jMpuLwT921SGZyho3Afe0iOAi5out8c4Gpyu1KtV2NTIJ3tUuPAVX2mwqYA
        9224ZfJkwVXlymdb+18bgQv4SMVKn0S6KVdCZucxiXDwVeFjwDlc+t3Sh1cZhW/ypV0wuGAPVIzZA1f7
        B9Rh2t109h+vptxN+fYovUlsXdRNSzeVtM1Md0sfDsqoU9nO6TbZ1OnmB86ZVLlJMPKGai6YZDfFBUnn
        pW7bQDju/6+6Ia8q89ctfThYq7JtwA0v6a2TTQJUtu6Xv6XgAhS++5xr0Dr4WU3TbvpK7hYHtBL3UUQA
        7JZmf9nCgcpX/Yi1AAT/VS4WD7SWC9Cg7qaVNHYmxoRzLIlRBb5VGvl6eCGBGJW6KQS+oywdnGtBk7H7
        Y0XXLX0455I4ZexB2MImvg4BcQpflWT0eiefYnd4cO4FjQrdFC1wZMdjhwfnYNKLdN2yKhCLn0nzRW/6
        2zo7Ojpmh6Wl/wGAsPqJwvN1VwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE0AAABKCAYAAAD+DNkIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAALfSURBVHhe7ZsvbFNRFIcHTFQgmmBIaAIJSBJICJmYKAnI
        JZAgEAjEFGoCUYGoQExWIOpALMFMTCBG0oQKJAKBQFRMTEwgEIgKRPnO7gGW9t7X+wSi9/2+5KTZu7/T
        5H27r+9f7poQQgghhFgtut3ulfF43JvNZkPqLTXo9/tP2b7uEXEWlzWlYkyQd8ejwkDYK5dTxc8cceTe
        UUcF1AffpUUQsUkgl8myQ5XMxxBdeb76Li3C4EHI5IHkh94ahUgjpKV+x1IMvTUK42VLY9ase6AOh94e
        hfGypfH7ZDtZlz1vj8J4Iw7PLyGTB2faF94ahUj50pCw46EcpszOy94ahUz50pDQIpA12xD80tuSECtf
        moG4DqFvIRsHYa89Xgknl1vUvQLqru9SGsRdREwfP8dB018+8QVbHhMpkNShriGy7ZuEEEIIIYRYPbig
        vcSF7X3qCbXB33oTlQI5V7ll2qd+nd48/eM7t1c9yZvDZpTJCY6SjBDX8pYkfNczqgSe+y4tgog2Qk6C
        l6VUvh8wyDTiIeSuh7LgP3DTW6MQacTjbnsxmo09PvLWKETKlsahec4Dddj39iiMFy/tggfq8N7bozDe
        iMPzR8jkweE58NYoRBohbS9k8uBE8MBboxApXxoSbhCYv6BNMfa2JGTKl2ZwyG17sIoTfgM73pKE3IAa
        F1BvfJfSIG6L4PybqD8cIqzyJXFjQUyLw/URZa/yhnz0qNs+LIQQQgghhCgarv6vcztlS35GlN1/HbBt
        2+4UPCLO4rJSTzuOGd/0qDAQYk8mljFl1m14SxJyjVhQ1iWQixaUGQzWXVD22FujEGmENC0oixOXxqzR
        grI0cWn8PtlO1kULyhisu6Bsx1ujEClfmknwUA5aUGbYJQSBzyFXDYIrly0axMqXZtjsIVR5mCJs1+OV
        cHJp1IKyls0k/EyCplPstmpkX+IxkcIEIqrN53nfJIQQQggh/jdra78BaWTJpRm/DMUAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cbY8U1P/ARYuX1xx0hztAAAAAElFTkSuQmCC
</value>
  </data>
</root>